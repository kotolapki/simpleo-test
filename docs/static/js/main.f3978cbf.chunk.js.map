{"version":3,"sources":["redux/types.js","redux/actions.js","utils/getRandomId.js","utils/checkLocalUsers.js","utils/addNewUserToLocalStorage.js","components/AutorizationErrorPopup/AutorizationErrorPopup.js","components/Autorization/Autorization.js","components/Navigation/Navigation.js","utils/deleteLocalUser.js","components/TableControls/TableControls.js","utils/changeLocalUserInformation.js","components/TableEditorForm/TableEditorForm.js","components/TableCell/TableCell.js","components/Table/Table.js","components/Main/Main.js","App.js","redux/reducers/userInformationReducer.js","redux/reducers/errorPopupReducer.js","redux/reducers/navigationReducer.js","redux/reducers/temperatureInformationReducer.js","utils/temperatureData.js","redux/reducers/rootReducer.js","index.js"],"names":["CHANGE_LOGIN_STATUS","ADD_NEW_USER","DELETE_USER","CHANGE_USER_INFORMATION","CHANGE_ERROR_LOGIN_STATUS","CHANGE_NAVIGATION_CATEGORY","DELETE_TEMPERATURE","CHANGE_TEMPERATURE","changeErrorLoginStatus","type","getRandomId","numberOfDigits","Math","floor","random","toFixed","pow","checkLocalUsers","login","password","nickname","email","localUsers","localStorage","getItem","parsedUsers","JSON","parse","user","addNewUserToLocalStorage","id","newUser","push","setItem","stringify","users","mapDispatchToProps","connect","errorMessage","className","onClick","changeLoginStatus","addNewUser","payload","state","loginErrorStatus","useState","isRegistation","setIsRegistation","setErrorMessage","clickHandler","e","target","action","method","onSubmit","preventDefault","value","reset","htmlFor","name","autoComplete","required","changeNavigationCategory","category","headers","width","buttonFontSize","setButtonFontSize","transform","transformArrow","setTransformArrow","changeCategoryHandler","aria-label","style","deleteLocalUser","index","splice","deleteUser","deleteTemperature","tableCategoryData","usersInformation","changeEditorVisibility","currentCategory","changeLocalUserInformation","changeUserInformation","changeTemperature","inputValue","setInputValue","placeholder","onChange","TableCell","editorVisibility","setEditorVisibility","temperatureInformation","tableData","temperature","tableColumnHeaders","map","item","Main","loginStatus","signInStatus","initialState","degree","rootReducer","combineReducers","slice","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0cAAaA,EAAsB,sBACtBC,EAAe,eACfC,EAAc,cACdC,EAA0B,0BAC1BC,EAA4B,4BAC5BC,EAA6B,6BAC7BC,EAAqB,qBACrBC,EAAqB,qBCwC3B,SAASC,IACd,MAAO,CACLC,KAAML,GC7CKM,MAJf,WAAyC,IAAnBC,EAAkB,uDAAH,EACnC,OAAOC,KAAKC,MAAMD,KAAKE,SAASC,QAAQJ,GAAkBC,KAAKI,IAAI,GAAIL,K,OC+B1DM,MAhCf,SAAyBC,EAAOC,EAAUV,EAAMW,EAAUC,GACxD,IAAMC,EAAaC,aAAaC,QAAQ,SAExC,GAAIF,EAAY,CACd,IAAMG,EAAcC,KAAKC,MAAML,GAE/B,GAAa,UAATb,EAAkB,CAAC,IAAD,gBACDgB,GADC,IACpB,2BAAgC,CAAC,IAAtBG,EAAqB,QAC9B,GAAIA,EAAKV,QAAUA,GAASU,EAAKT,WAAaA,EAC5C,OAAO,GAHS,+BAUtB,GAAa,iBAATV,EAAyB,CAAC,IAAD,gBACRgB,GADQ,IAC3B,2BAAgC,CAAC,IAAtBG,EAAqB,QAC9B,GAAIA,EAAKR,WAAaA,EACpB,MAAO,WACF,GAAIQ,EAAKP,QAAUA,EACxB,MAAO,QACF,GAAIO,EAAKV,QAAUA,EACxB,MAAO,SAPgB,kCCKlBW,MArBf,SAAkCT,EAAUC,EAAOH,EAAOC,EAAUW,GAClE,IAAMC,EAAU,CACdD,GAAIA,EACJZ,MAAOA,EACPE,SAAWA,EACXC,MAAOA,EACPF,SAAUA,GAGNG,EAAaC,aAAaC,QAAQ,SAExC,GAAIF,EAAY,CACd,IAAMG,EAAcC,KAAKC,MAAML,GAC/BG,EAAYO,KAAKD,GACjBR,aAAaU,QAAQ,QAASP,KAAKQ,UAAUT,QACxC,CACL,IAAMU,EAAQ,CAACJ,GACfR,aAAaU,QAAQ,QAASP,KAAKQ,UAAUC,M,YCEjD,IAAMC,EAAqB,CACzB5B,uBAAwBA,GAGX6B,cAAQ,KAAMD,EAAdC,EAlBf,YAAyE,IAAxC7B,EAAuC,EAAvCA,uBAAwB8B,EAAe,EAAfA,aACvD,OACE,sBAAKC,UAAU,cAAf,UACE,qBAAKA,UAAU,wBACf,sBAAKA,UAAU,yBAAf,UACE,mBAAGA,UAAU,oBAAb,SACGD,IAEH,wBAAQC,UAAU,sBAAsB9B,KAAK,SAAS+B,QAAShC,EAA/D,8CCmHR,IAMM4B,EAAqB,CACzBK,kBL9HK,WACL,MAAO,CACLhC,KAAMT,IK6HR0C,WLzHK,SAAoBtB,EAAUC,EAAQH,EAAOC,EAAUW,GAC5D,MAAO,CACLrB,KAAMR,EACN0C,QAAS,CACPb,GAAIA,EACJZ,MAAOA,EACPE,SAAWA,EACXC,MAAOA,EACPF,SAAUA,KKkHdX,uBAAwBA,GAGX6B,eAZS,SAAAO,GACtB,MAAO,CACLC,iBAAkBD,EAAMC,iBAAiBA,oBAULT,EAAzBC,EAnIf,YAAkG,IAI5F5B,EAJiBgC,EAA0E,EAA1EA,kBAAmBC,EAAuD,EAAvDA,WAAYlC,EAA2C,EAA3CA,uBAAwBqC,EAAmB,EAAnBA,iBAAmB,EACrDC,oBAAS,GAD4C,mBACxFC,EADwF,KACzEC,EADyE,OAEvDF,mBAAS,IAF8C,mBAExFR,EAFwF,KAE1EW,EAF0E,KAM/F,SAASC,EAAaC,GAGP,kBAFb1C,EAAO0C,EAAEC,OAAOtB,KAGdkB,GAAiB,GAGN,gBAATvC,GACFuC,GAAiB,GAuCrB,OACE,qCACGH,GAAoB,cAAC,EAAD,CAAwBP,aAAcA,IAC3D,uBAAMC,UAAU,oBAAoBc,OAAO,IAAIC,OAAO,OAAOC,SAtCjE,SAAuBJ,GAYrB,GAXAA,EAAEK,iBAEW,UAAT/C,IACEQ,EAAgBkC,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAO,SACxDhB,KAEAQ,EAAgB,+DAChBzC,MAIS,iBAATC,EACF,OAAQQ,EAAgBkC,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAO,eAAgBN,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,QAC3G,IAAK,WACHR,EAAgB,kDAChBzC,IACA,MACF,IAAK,QACHyC,EAAgB,+CAChBzC,IACA,MACF,IAAK,QACHyC,EAAgB,+CAChBzC,IACA,MACF,QACEqB,EAAyBsB,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAO/C,KACrGgC,EAAWS,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAON,EAAEC,OAAO,GAAGK,MAAO/C,KAI7FyC,EAAEC,OAAOM,SAMP,UACGX,GACC,qCACE,uBAAOR,UAAU,2BAA2BoB,QAAQ,gBAApD,sBAGA,uBAAOpB,UAAU,2BAA2B9B,KAAK,OAAOmD,KAAK,gBAAgB9B,GAAG,gBAAgB+B,aAAa,MAAMC,UAAQ,IAC3H,uBAAOvB,UAAU,2BAA2BoB,QAAQ,aAApD,mBAGA,uBAAOpB,UAAU,2BAA2B9B,KAAK,QAAQmD,KAAK,aAAa9B,GAAG,aAAa+B,aAAa,MAAMC,UAAQ,OAG1H,uBAAOvB,UAAU,2BAA2BoB,QAAQ,aAApD,mBAGA,uBAAOpB,UAAU,2BAA2B9B,KAAK,OAAOmD,KAAK,aAAa9B,GAAG,aAAa+B,aAAa,MAAMC,UAAQ,IACrH,uBAAOvB,UAAU,2BAA2BoB,QAAQ,gBAApD,sBACA,uBAAOpB,UAAU,2BAA2B9B,KAAK,WAAWmD,KAAK,gBAAgB9B,GAAG,gBAAgBgC,UAAQ,IAC3Gf,EACC,sBAAKR,UAAU,kCAAf,UACE,wBACEA,UAAU,qEACV9B,KAAK,SACLqB,GAAG,cACHU,QAASU,EAJX,kBAQA,wBACEX,UAAU,sEACV9B,KAAK,SACLqB,GAAG,eACHU,QAASU,EAJX,8BAUF,sBAAKX,UAAU,kCAAf,UACE,wBACEA,UAAU,qEACV9B,KAAK,SACLqB,GAAG,QACHU,QAASU,EAJX,mBAQA,wBACEX,UAAU,sEACV9B,KAAK,SACLqB,GAAG,eACHU,QAASU,EAJX,sC,YC3CZ,IAAMd,EAAqB,CACzB2B,yBNlBK,SAAkCC,EAAUC,GACjD,MAAO,CACLxD,KAAMJ,EACNsC,QAAS,CACPqB,SAAUA,EACVC,QAASA,MMgBA5B,cAAQ,KAAMD,EAAdC,EArEf,YAAiD,IAA5B0B,EAA2B,EAA3BA,yBAA2B,EACFjB,mBAAS,CAACoB,MAAO,SADf,mBACvCC,EADuC,KACvBC,EADuB,OAEFtB,mBAAS,CAACuB,UAAW,mBAFnB,mBAEvCC,EAFuC,KAEvBC,EAFuB,KAc9C,SAASC,EAAsBrB,GAC7B,IAAIc,EAGFA,EADkB,UAAhBd,EAAEC,OAAOtB,GACD,CAAC,KAAM,SAEP,CAAC,KAAM,UAGnBiC,EAAyBZ,EAAEC,OAAOtB,GAAImC,GAGxC,OACE,sBAAK1B,UAAU,aAAf,UACE,qBAAIA,UAAU,mBAAd,UACE,oBAAIA,UAAU,mBAAd,SACE,wBACEA,UAAU,+CACV9B,KAAK,SACLgE,aAAW,QACX3C,GAAG,QACH4C,MAAOP,EACP3B,QAASgC,EANX,qBAWF,oBAAIjC,UAAU,mBAAd,SACE,wBAAQA,UAAU,qDAClB9B,KAAK,SACLgE,aAAW,cACX3C,GAAG,cACH4C,MAAOP,EACP3B,QAASgC,EALT,8BAWJ,wBACEjC,UAAU,wBACV9B,KAAK,SACLgE,aAAW,0BACXC,MAAOJ,EACP9B,QAtDN,WAC+B,SAAzB2B,EAAeD,OAAiD,mBAA7BI,EAAeD,WACpDD,EAAkB,CAACF,MAAO,SAC1BK,EAAkB,CAACF,UAAW,mBAE9BD,EAAkB,CAACF,MAAO,SAC1BK,EAAkB,CAACF,UAAW,6B,kBCRrBM,MAPf,SAAyBC,GACvB,IAAMtD,EAAaC,aAAaC,QAAQ,SAClCC,EAAcC,KAAKC,MAAML,GAC/BG,EAAYoD,OAAOD,EAAO,GAC1BrD,aAAaU,QAAQ,QAASP,KAAKQ,UAAUT,KCsB/C,IAOMW,EAAqB,CACzB0C,WRNK,SAAoBF,GACzB,MAAO,CACLnE,KAAMP,EACNyC,QAAS,CACPiC,MAAOA,KQGXG,kBR4BK,SAA2BH,GAChC,MAAO,CACLnE,KAAMH,EACNqC,QAAS,CACPiC,MAAOA,MQ7BEvC,eAZS,SAAAO,GACtB,MAAO,CACLoC,kBAAmBpC,EAAMoC,kBACzBC,iBAAkBrC,EAAMqC,oBASY7C,EAAzBC,EAhCf,YAA2G,IAAnF6C,EAAkF,EAAlFA,uBAAwBF,EAA0D,EAA1DA,kBAAmBJ,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,kBAYpF,OACE,sBAAKxC,UAAU,+BAAf,UACE,wBAAQA,UAAU,wDAAwD9B,KAAK,SAASgE,aAAW,aAAajC,QAAS0C,IACzH,wBAAQ3C,UAAU,0DAA0D9B,KAAK,SAASgE,aAAW,eAAejC,QAdxH,WAC4C,UAAtCwC,EAAkBG,kBACpBR,EAAgBC,GAChBE,EAAWF,IAG6B,gBAAtCI,EAAkBG,iBACpBJ,EAAkBH,Y,MCPTQ,MAPf,SAAoCR,EAAOnB,GACzC,IAAMnC,EAAaC,aAAaC,QAAQ,SAClCC,EAAcC,KAAKC,MAAML,GAC/BG,EAAYmD,GAAZ,MAA8BnB,EAC9BlC,aAAaU,QAAQ,QAASP,KAAKQ,UAAUT,KCyD/C,IAMMW,EAAqB,CACzBiD,sBV/BK,SAA+BT,EAAOnB,GAC3C,MAAO,CACLhD,KAAMN,EACNwC,QAAS,CACPiC,MAAOA,EACPnB,MAAOA,KU2BX6B,kBVGK,SAA2BV,EAAOnB,GACvC,MAAO,CACLhD,KAAMF,EACNoC,QAAS,CACPiC,MAAOA,EACPnB,MAAOA,MULEpB,eAXS,SAAAO,GACtB,MAAO,CACLoC,kBAAmBpC,EAAMoC,qBASW5C,EAAzBC,EAlEf,YAA+H,IAArGoB,EAAoG,EAApGA,MAAOyB,EAA6F,EAA7FA,uBAAwBN,EAAqE,EAArEA,MAAOS,EAA8D,EAA9DA,sBAAuBL,EAAuC,EAAvCA,kBAAmBM,EAAoB,EAApBA,kBAAoB,EACxFxC,mBAASW,GAD+E,mBACrH8B,EADqH,KACzGC,EADyG,KAsB5H,OACE,uBAAMjD,UAAU,mBAAmBc,OAAO,IAAIC,OAAO,OAAOC,SAhB9D,SAAuBJ,GACrBA,EAAEK,iBAEwC,UAAtCwB,EAAkBG,kBACpBC,EAA2BR,EAAOzB,EAAEC,OAAO,GAAGK,OAC9C4B,EAAsBT,EAAOzB,EAAEC,OAAO,GAAGK,QAGD,gBAAtCuB,EAAkBG,iBACpBG,EAAkBV,EAAOzB,EAAEC,OAAO,GAAGK,OAGvCyB,KAIA,UACE,uBAAO3C,UAAU,oCAAoCoB,QAAQ,YAA7D,uBAGA,uBACEpB,UAAU,oBACV9B,KAAK,OACLmD,KAAK,YACL9B,GAAG,YACH2D,YAAahC,EACbA,MAAO8B,EACPG,SA/BN,SAAuBvC,GACrBqC,EAAcrC,EAAEC,OAAOK,QA+BnBI,aAAa,MACbC,UAAQ,IAEV,sBAAKvB,UAAU,2BAAf,UACE,wBACEA,UAAU,0CACV9B,KAAK,SACLgE,aAAW,qBAEb,wBACElC,UAAU,0CACV9B,KAAK,SACLgE,aAAW,iBACXjC,QAAS0C,aC5BJS,MArBf,YAAoC,IAAhBlC,EAAe,EAAfA,MAAOmB,EAAQ,EAARA,MAAQ,EACe9B,oBAAS,GADxB,mBAC1B8C,EAD0B,KACRC,EADQ,KAGjC,SAASX,IACPW,GAAqBD,GAGvB,OACE,oBAAIrD,UAAU,kCAAd,SACGqD,EACC,cAAC,EAAD,CAAiBnC,MAAOA,EAAOmB,MAAOA,EAAOM,uBAAwBA,IAErE,qCACGzB,EACD,cAAC,EAAD,CAAemB,MAAOA,EAAOM,uBAAwBA,UCwB/D,IAYe7C,eAZS,SAAAO,GACtB,MAAO,CACLoC,kBAAmBpC,EAAMoC,kBACzBC,iBAAkBrC,EAAMqC,iBACxBa,uBAAwBlD,EAAMkD,0BAQM,KAAzBzD,EAlDf,YAA+E,IACzE0D,EADUf,EAA8D,EAA9DA,kBAAmBC,EAA2C,EAA3CA,iBAAkBa,EAAyB,EAAzBA,uBAWnD,MAR0C,UAAtCd,EAAkBG,kBACpBY,EAAYd,EAAiB9C,OAGW,gBAAtC6C,EAAkBG,kBACpBY,EAAYD,EAAuBE,aAInC,qBAAKzD,UAAU,QAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,wBAAOA,UAAU,cAAjB,UACE,gCACA,oBAAIA,UAAU,aAAd,SACGyC,EAAkBiB,mBAAmBC,KAAI,SAACC,EAAMvB,GAC/C,OAAO,oBAAIrC,UAAU,mBAAd,SAA8C4D,GAARvB,UAIjD,gCACGmB,EAAUG,KAAI,SAACC,EAAMvB,GACpB,OACE,qBAAIrC,UAAU,aAAd,UACE,oBAAIA,UAAU,cAAd,SAA6B4D,EAAKnB,EAAkBiB,mBAAmB,MACvE,cAAC,EAAD,CAAWxC,MAAO0C,EAAKnB,EAAkBiB,mBAAmB,IAAKrB,MAAOA,MAF1CA,kBChBjCwB,MATf,WACE,OACE,sBAAK7D,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCYN,IAMeF,eANS,SAAAO,GACtB,MAAO,CACLyD,YAAazD,EAAMqC,iBAAiBqB,gBAIA,KAAzBjE,EAlBf,YAA6B,IAAfgE,EAAc,EAAdA,YACZ,OACE,qBAAK9D,UAAU,MAAf,SACG8D,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,S,qBCbF/E,EAAaC,aAAaC,QAAQ,SAClCW,EAAQ,GAEd,GAAIb,EAAY,CACd,IADc,EACRG,EAAcC,KAAKC,MAAML,GADjB,cAGKG,GAHL,IAGd,2BAAgC,CAAC,IAAtB0E,EAAqB,QAC9BhE,EAAMH,KAAKmE,IAJC,iCAQhB,IAAMI,EAAe,CACnBD,cAAc,EACdnE,MAAOA,GCbHoE,EAAe,CACnB1D,kBAAkB,GCDd0D,EAAe,CACnBpB,gBAAiB,QACjBc,mBAAoB,CAAC,KAAM,UCDvBM,EAAe,CACnBP,YCJoB,CACpB,CACElE,GAAI,IACJ0E,OAAQ,KAEV,CACE1E,GAAI,IACJ0E,OAAQ,MAEV,CACE1E,GAAI,IACJ0E,OAAQ,OAEV,CACE1E,GAAI,IACJ0E,OAAQ,OCTCC,EAAcC,YAAgB,CACzCzB,iBLWoC,WAAmC,IAAlCrC,EAAiC,uDAAzB2D,EAAclD,EAAW,uCACtE,OAAQA,EAAO5C,MACb,KAAKT,EACH,OAAO,2BAAI4C,GAAX,IAAkB0D,cAAe1D,EAAM0D,eACzC,KAAKrG,EACH,OAAO,2BAAI2C,GAAX,IAAkB0D,cAAe1D,EAAM0D,aAAcnE,MAAM,GAAD,mBAAMS,EAAMT,OAAZ,CAAmBkB,EAAOV,YACtF,KAAKzC,EACH,IAAM0E,EAAQvB,EAAOV,QAAQiC,MAC7B,OAAO,2BAAIhC,GAAX,IAAkBT,MAAM,GAAD,mBAAMS,EAAMT,MAAMwE,MAAM,EAAG/B,IAA3B,YAAsChC,EAAMT,MAAMwE,MAAM/B,EAAQ,OACzF,KAAKzE,EAEH,OADAyC,EAAMT,MAAMkB,EAAOV,QAAQiC,OAA3B,MAA6CvB,EAAOV,QAAQc,MACrD,2BAAIb,GAAX,IAAkBT,MAAM,YAAKS,EAAMT,SACrC,QAAS,OAAOS,IKtBlBC,iBJF+B,WAAmC,IAAlCD,EAAiC,uDAAzB2D,EAAclD,EAAW,uCACjE,OAAQA,EAAO5C,MACb,KAAKL,EACH,OAAO,2BAAIwC,GAAX,IAAkBC,kBAAmBD,EAAMC,mBAC7C,QAAS,OAAOD,IIDlBoC,kBHF+B,WAAmC,IAAlCpC,EAAiC,uDAAzB2D,EAAclD,EAAW,uCACjE,OAAQA,EAAO5C,MACb,KAAKJ,EACH,OAAO,2BAAIuC,GAAX,IAAkBuC,gBAAiB9B,EAAOV,QAAQqB,SAAUiC,mBAAmB,YAAK5C,EAAOV,QAAQsB,WACrG,QAAS,OAAOrB,IGDlBkD,uBFH2C,WAAmC,IAAlClD,EAAiC,uDAAzB2D,EAAclD,EAAW,uCAC7E,OAAQA,EAAO5C,MACb,KAAKH,EACH,IAAMsE,EAAQvB,EAAOV,QAAQiC,MAC7B,OAAO,2BAAIhC,GAAX,IAAkBoD,YAAY,GAAD,mBAAMpD,EAAMoD,YAAYW,MAAM,EAAG/B,IAAjC,YAA4ChC,EAAMoD,YAAYW,MAAM/B,EAAQ,OAC3G,KAAKrE,EAEH,OADAqC,EAAMoD,YAAY3C,EAAOV,QAAQiC,OAAjC,OAAoDvB,EAAOV,QAAQc,MAC5D,2BAAIb,GAAX,IAAkBoD,YAAY,YAAKpD,EAAMoD,eAC3C,QACE,OAAOpD,MGTPgE,EAAQC,YAAYJ,GAE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.f3978cbf.chunk.js","sourcesContent":["export const CHANGE_LOGIN_STATUS = 'CHANGE_LOGIN_STATUS';\r\nexport const ADD_NEW_USER = 'ADD_NEW_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CHANGE_USER_INFORMATION = 'CHANGE_USER_INFORMATION';\r\nexport const CHANGE_ERROR_LOGIN_STATUS = 'CHANGE_ERROR_LOGIN_STATUS';\r\nexport const CHANGE_NAVIGATION_CATEGORY = 'CHANGE_NAVIGATION_CATEGORY';\r\nexport const DELETE_TEMPERATURE = 'DELETE_TEMPERATURE';\r\nexport const CHANGE_TEMPERATURE = 'CHANGE_TEMPERATURE';","import {CHANGE_LOGIN_STATUS} from './types';\r\nimport {ADD_NEW_USER} from './types';\r\nimport {DELETE_USER} from './types';\r\nimport {CHANGE_USER_INFORMATION} from './types';\r\nimport {CHANGE_ERROR_LOGIN_STATUS} from './types';\r\nimport {CHANGE_NAVIGATION_CATEGORY} from './types';\r\nimport {DELETE_TEMPERATURE} from './types';\r\nimport {CHANGE_TEMPERATURE} from './types';\r\n\r\nexport function changeLoginStatus() {\r\n  return {\r\n    type: CHANGE_LOGIN_STATUS\r\n  }\r\n}\r\n\r\nexport function addNewUser(nickname, email , login, password, id) {\r\n  return {\r\n    type: ADD_NEW_USER,\r\n    payload: {\r\n      id: id,\r\n      login: login,\r\n      nickname : nickname,\r\n      email: email,\r\n      password: password,\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteUser(index) {\r\n  return {\r\n    type: DELETE_USER,\r\n    payload: {\r\n      index: index\r\n    }\r\n  }\r\n}\r\n\r\nexport function changeUserInformation(index, value) {\r\n  return {\r\n    type: CHANGE_USER_INFORMATION,\r\n    payload: {\r\n      index: index,\r\n      value: value\r\n    }\r\n  }\r\n}\r\n\r\nexport function changeErrorLoginStatus() {\r\n  return {\r\n    type: CHANGE_ERROR_LOGIN_STATUS\r\n  }\r\n}\r\n\r\nexport function changeNavigationCategory(category, headers) {\r\n  return {\r\n    type: CHANGE_NAVIGATION_CATEGORY,\r\n    payload: {\r\n      category: category,\r\n      headers: headers\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteTemperature(index) {\r\n  return {\r\n    type: DELETE_TEMPERATURE,\r\n    payload: {\r\n      index: index\r\n    }\r\n  }\r\n}\r\n\r\nexport function changeTemperature(index, value) {\r\n  return {\r\n    type: CHANGE_TEMPERATURE,\r\n    payload: {\r\n      index: index,\r\n      value: value\r\n    }\r\n  }\r\n}\r\n\r\n","function getRandomId (numberOfDigits=5) {\n  return Math.floor(Math.random().toFixed(numberOfDigits) * Math.pow(10, numberOfDigits));\n}\n\nexport default getRandomId;","function checkLocalUsers(login, password, type, nickname, email) {\r\n  const localUsers = localStorage.getItem('users');\r\n\r\n  if (localUsers) {\r\n    const parsedUsers = JSON.parse(localUsers);\r\n    \r\n    if (type === 'login') {\r\n      for (const user of parsedUsers) {\r\n        if (user.login === login && user.password === password) {\r\n          return true;\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === 'registration') {\r\n      for (const user of parsedUsers) {\r\n        if (user.nickname === nickname) {\r\n          return 'nickname';\r\n        } else if (user.email === email) {\r\n          return 'email';\r\n        } else if (user.login === login) {\r\n          return 'login';\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default checkLocalUsers;","function addNewUserToLocalStorage(nickname, email, login, password, id) {\r\n  const newUser = {\r\n    id: id,\r\n    login: login,\r\n    nickname : nickname,\r\n    email: email,\r\n    password: password,\r\n  }\r\n\r\n  const localUsers = localStorage.getItem('users');\r\n\r\n  if (localUsers) {\r\n    const parsedUsers = JSON.parse(localUsers);\r\n    parsedUsers.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(parsedUsers));\r\n  } else {\r\n    const users = [newUser];\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n  }\r\n}\r\n\r\nexport default addNewUserToLocalStorage;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeErrorLoginStatus} from '../../redux/actions';\r\nimport './styles.css';\r\n\r\nfunction AutorizationErrorPopup({changeErrorLoginStatus, errorMessage}) {\r\n  return (\r\n    <div className='error-popup'>\r\n      <div className='error-popup__layout'></div>\r\n      <div className='error-popup__container'>\r\n        <p className='error-popup__text'>\r\n          {errorMessage}\r\n        </p>\r\n        <button className='error-popup__button' type='button' onClick={changeErrorLoginStatus}>Click here to try again</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeErrorLoginStatus: changeErrorLoginStatus\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AutorizationErrorPopup);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeLoginStatus, addNewUser, changeErrorLoginStatus} from '../../redux/actions';\r\nimport getRandomId from '../../utils/getRandomId';\r\nimport checkLocalUsers from '../../utils/checkLocalUsers';\r\nimport addNewUserToLocalStorage from '../../utils/addNewUserToLocalStorage';\r\nimport './styles.css';\r\nimport AutorizationErrorPopup from '../AutorizationErrorPopup';\r\n\r\nfunction Autorization({changeLoginStatus, addNewUser, changeErrorLoginStatus, loginErrorStatus}) {\r\n  const [isRegistation, setIsRegistation] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  let type;\r\n\r\n  function clickHandler(e) {\r\n    type = e.target.id;\r\n\r\n    if (type === 'registration') {\r\n      setIsRegistation(true);\r\n    }\r\n\r\n    if (type === 'backToLogin') {\r\n      setIsRegistation(false);\r\n    }\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (type === 'login') {\r\n      if (checkLocalUsers(e.target[0].value, e.target[1].value, 'login')) {\r\n        changeLoginStatus();\r\n      } else {\r\n        setErrorMessage('This user is not registered, try again or register new user');\r\n        changeErrorLoginStatus();\r\n      }\r\n    }\r\n\r\n    if (type === 'registerUser') {\r\n      switch (checkLocalUsers(e.target[2].value, e.target[3].value, 'registration', e.target[0].value, e.target[1].value)) {\r\n        case 'nickname':\r\n          setErrorMessage('This nickname is already used, try another one');\r\n          changeErrorLoginStatus();\r\n          break;\r\n        case 'email':\r\n          setErrorMessage('This email is already used, try another one');\r\n          changeErrorLoginStatus();\r\n          break;\r\n        case 'login':\r\n          setErrorMessage('This login is already used, try another one');\r\n          changeErrorLoginStatus();\r\n          break;\r\n        default: \r\n          addNewUserToLocalStorage(e.target[0].value, e.target[1].value, e.target[2].value, e.target[3].value, getRandomId());\r\n          addNewUser(e.target[0].value, e.target[1].value, e.target[2].value, e.target[3].value, getRandomId());\r\n      }\r\n    }\r\n\r\n    e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loginErrorStatus && <AutorizationErrorPopup errorMessage={errorMessage}/>}\r\n      <form className='autorization-form' action='#' method=\"post\" onSubmit={submitHandler}>\r\n        {isRegistation && \r\n          <>\r\n            <label className='autorization-form__label' htmlFor='nicknameField'>\r\n              Nickname\r\n            </label>\r\n            <input className='autorization-form__input' type='text' name='nicknameField' id='nicknameField' autoComplete='off' required />\r\n            <label className='autorization-form__label' htmlFor='emailField'>\r\n              Email\r\n            </label>\r\n            <input className='autorization-form__input' type='email' name='emailField' id='emailField' autoComplete='off' required />\r\n          </>\r\n        }\r\n        <label className='autorization-form__label' htmlFor='loginField'>\r\n          Login\r\n        </label>\r\n        <input className='autorization-form__input' type='text' name='loginField' id='loginField' autoComplete='off' required />\r\n        <label className='autorization-form__label' htmlFor='passwordField'>Password</label>\r\n        <input className='autorization-form__input' type='password' name='passwordField' id='passwordField' required />\r\n        {isRegistation? \r\n          <div className='autorization-form__btns-wrapper'>\r\n            <button \r\n              className='autorization-form__submit-btn autorization-form__submit-btn--first' \r\n              type='button' \r\n              id='backToLogin' \r\n              onClick={clickHandler}\r\n            >\r\n              Back\r\n            </button>\r\n            <button \r\n              className='autorization-form__submit-btn autorization-form__submit-btn--second' \r\n              type='submit' \r\n              id='registerUser' \r\n              onClick={clickHandler}\r\n            >\r\n              Register User\r\n            </button>\r\n          </div>\r\n          :\r\n          <div className='autorization-form__btns-wrapper'>\r\n            <button \r\n              className='autorization-form__submit-btn autorization-form__submit-btn--first' \r\n              type='submit' \r\n              id='login' \r\n              onClick={clickHandler}\r\n            >\r\n              Login\r\n            </button>\r\n            <button \r\n              className='autorization-form__submit-btn autorization-form__submit-btn--second' \r\n              type='button' \r\n              id='registration' \r\n              onClick={clickHandler}\r\n            >\r\n              Registration\r\n            </button>\r\n          </div>\r\n        }\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loginErrorStatus: state.loginErrorStatus.loginErrorStatus\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeLoginStatus: changeLoginStatus,\r\n  addNewUser: addNewUser,\r\n  changeErrorLoginStatus: changeErrorLoginStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Autorization);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeNavigationCategory} from '../../redux/actions';\r\nimport './styles.css';\r\n\r\nfunction Navigation({changeNavigationCategory}) {\r\n  const [buttonFontSize, setButtonFontSize] = useState({width: 'auto'});\r\n  const [transformArrow, setTransformArrow] = useState({transform: 'rotate(180deg)'});\r\n\r\n  function changeButtonStyleHandler() {\r\n    if (buttonFontSize.width === 'auto' && transformArrow.transform === 'rotate(180deg)') {\r\n      setButtonFontSize({width: '50px'});\r\n      setTransformArrow({transform: 'rotate(0deg)'});\r\n    } else {\r\n      setButtonFontSize({width: 'auto'});\r\n      setTransformArrow({transform: 'rotate(180deg)'});\r\n    }\r\n  }\r\n\r\n  function changeCategoryHandler(e) {\r\n    let headers;\r\n\r\n    if (e.target.id === 'users') {\r\n      headers = ['id', 'login'];\r\n    } else {\r\n      headers = ['id', 'degree'];\r\n    }\r\n\r\n    changeNavigationCategory(e.target.id, headers);\r\n  }\r\n\r\n  return (\r\n    <nav className='navigation'>\r\n      <ul className='navigation__list'>\r\n        <li className='navigation__item'>\r\n          <button \r\n            className='navigation__button navigation__button--users' \r\n            type='button' \r\n            aria-label='Users' \r\n            id='users' \r\n            style={buttonFontSize} \r\n            onClick={changeCategoryHandler}\r\n          >\r\n            Users\r\n          </button>\r\n        </li>\r\n        <li className='navigation__item'>\r\n          <button className='navigation__button navigation__button--temperature' \r\n          type='button' \r\n          aria-label='Temperature' \r\n          id='temperature' \r\n          style={buttonFontSize} \r\n          onClick={changeCategoryHandler}\r\n          >\r\n            Temperature\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <button \r\n        className='navigation__arrow-btn' \r\n        type='button' \r\n        aria-label='show/hide button`s text' \r\n        style={transformArrow} \r\n        onClick={changeButtonStyleHandler}\r\n      >\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeNavigationCategory: changeNavigationCategory\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Navigation);","function deleteLocalUser(index) {\r\n  const localUsers = localStorage.getItem('users');\r\n  const parsedUsers = JSON.parse(localUsers);\r\n  parsedUsers.splice(index, 1);\r\n  localStorage.setItem('users', JSON.stringify(parsedUsers));\r\n}\r\n\r\nexport default deleteLocalUser;","import React from 'react';\r\nimport './styles.css';\r\nimport {connect} from 'react-redux';\r\nimport {deleteUser, deleteTemperature} from '../../redux/actions';\r\nimport deleteLocalUser from '../../utils/deleteLocalUser';\r\n\r\nfunction TableControls({changeEditorVisibility, tableCategoryData, index, deleteUser, deleteTemperature}) {\r\n  function clickHandler() {\r\n    if (tableCategoryData.currentCategory === 'users') {\r\n      deleteLocalUser(index);\r\n      deleteUser(index);\r\n    }\r\n\r\n    if (tableCategoryData.currentCategory === 'temperature') {\r\n      deleteTemperature(index);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='table__cell-controls-wrapper'>\r\n      <button className='table__cell-control-btn table__cell-control-btn--edit' type='button' aria-label='edit value' onClick={changeEditorVisibility}></button>\r\n      <button className='table__cell-control-btn table__cell-control-btn--delete' type='button' aria-label='delete value' onClick={clickHandler}></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tableCategoryData: state.tableCategoryData,\r\n    usersInformation: state.usersInformation\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  deleteUser: deleteUser,\r\n  deleteTemperature: deleteTemperature\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableControls);","function changeLocalUserInformation(index, value) {\r\n  const localUsers = localStorage.getItem('users');\r\n  const parsedUsers = JSON.parse(localUsers);\r\n  parsedUsers[index]['login'] = value;\r\n  localStorage.setItem('users', JSON.stringify(parsedUsers));\r\n}\r\n\r\nexport default changeLocalUserInformation;","import React, {useState} from 'react';\r\nimport './styles.css';\r\nimport {connect} from 'react-redux';\r\nimport {changeUserInformation, changeTemperature} from '../../redux/actions';\r\nimport changeLocalUserInformation from '../../utils/changeLocalUserInformation';\r\n\r\nfunction TableEditorForm({value, changeEditorVisibility, index, changeUserInformation, tableCategoryData, changeTemperature}) {\r\n  const [inputValue, setInputValue] = useState(value);\r\n  \r\n  function changeHandler(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    if (tableCategoryData.currentCategory === 'users') {\r\n      changeLocalUserInformation(index, e.target[0].value);\r\n      changeUserInformation(index, e.target[0].value);\r\n    }\r\n\r\n    if (tableCategoryData.currentCategory === 'temperature') {\r\n      changeTemperature(index, e.target[0].value);\r\n    }\r\n    \r\n    changeEditorVisibility();\r\n  }\r\n\r\n  return (\r\n    <form className='table__cell-form' action='#' method='POST' onSubmit={submitHandler}>\r\n      <label className='table__cell-label visually-hidden' htmlFor='editValue'>\r\n        New value\r\n      </label>\r\n      <input \r\n        className='table__cell-input' \r\n        type='text' \r\n        name='editValue' \r\n        id='editValue' \r\n        placeholder={value} \r\n        value={inputValue} \r\n        onChange={changeHandler} \r\n        autoComplete='off' \r\n        required\r\n      />\r\n      <div className='table__cell-btns-wrapper'>\r\n        <button \r\n          className='table__cell-btn table__cell-btn--submit' \r\n          type='submit' \r\n          aria-label='submit new value'\r\n        />\r\n        <button \r\n          className='table__cell-btn table__cell-btn--cancel' \r\n          type='button' \r\n          aria-label='cancel editing' \r\n          onClick={changeEditorVisibility}\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tableCategoryData: state.tableCategoryData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  changeUserInformation: changeUserInformation,\r\n  changeTemperature: changeTemperature\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableEditorForm);","import React, {useState} from 'react';\r\nimport './styles.css';\r\nimport TableControls from '../TableControls';\r\nimport TableEditorForm from '../TableEditorForm';\r\n\r\nfunction TableCell({value, index}) {\r\n  const [editorVisibility, setEditorVisibility] = useState(false);\r\n\r\n  function changeEditorVisibility() {\r\n    setEditorVisibility(!editorVisibility);\r\n  }\r\n\r\n  return (\r\n    <td className='table__cell table__cell--second'>\r\n      {editorVisibility? \r\n        <TableEditorForm value={value} index={index} changeEditorVisibility={changeEditorVisibility}/>\r\n        :\r\n        <>\r\n          {value}\r\n          <TableControls index={index} changeEditorVisibility={changeEditorVisibility}/>\r\n        </>\r\n      }\r\n    </td>\r\n  )\r\n}\r\n\r\nexport default TableCell;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './styles.css';\r\nimport TableCell from '../TableCell';\r\n\r\nfunction Table({tableCategoryData, usersInformation, temperatureInformation}) {\r\n  let tableData;\r\n\r\n  if (tableCategoryData.currentCategory === 'users') {\r\n    tableData = usersInformation.users;\r\n  }\r\n\r\n  if (tableCategoryData.currentCategory === 'temperature') {\r\n    tableData = temperatureInformation.temperature;\r\n  }\r\n  \r\n  return (\r\n    <div className='table'>\r\n      <div className='table__wrapper'>\r\n        <table className='table__body'>\r\n          <thead>\r\n          <tr className='table__row'>\r\n            {tableCategoryData.tableColumnHeaders.map((item, index) => {\r\n              return <th className='table__head-cell' key={index}>{item}</th>\r\n            })}\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData.map((item, index) => {\r\n              return (\r\n                <tr className='table__row' key={index}>\r\n                  <td className='table__cell'>{item[tableCategoryData.tableColumnHeaders[0]]}</td>\r\n                  <TableCell value={item[tableCategoryData.tableColumnHeaders[1]]} index={index}/>\r\n                </tr>\r\n                )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tableCategoryData: state.tableCategoryData,\r\n    usersInformation: state.usersInformation,\r\n    temperatureInformation: state.temperatureInformation\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = {\r\n//   changeTableEditorVisibility: changeTableEditorVisibility\r\n// }\r\n\r\nexport default connect(mapStateToProps, null)(Table);","import React from 'react';\r\nimport './styles.css';\r\nimport Navigation from '../Navigation';\r\nimport Table from '../Table/Table';\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className='main-container'>\r\n      <Navigation />\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport {connect} from 'react-redux';\nimport './assets/css/normalize.css';\nimport './assets/css/reset.css';\nimport './assets/css/fonts.css';\nimport './styles.css';\nimport Autorization from './components/Autorization';\nimport Main from './components/Main';\n\nfunction App({loginStatus}) {\n  return (\n    <div className=\"App\">\n      {loginStatus?\n        <Main />\n        :\n        <Autorization />\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginStatus: state.usersInformation.signInStatus\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);","import {CHANGE_LOGIN_STATUS, ADD_NEW_USER, DELETE_USER, CHANGE_USER_INFORMATION} from '../types';\r\n\r\nconst localUsers = localStorage.getItem('users');\r\nconst users = [];\r\n\r\nif (localUsers) {\r\n  const parsedUsers = JSON.parse(localUsers);\r\n\r\n  for (const item of parsedUsers) {\r\n    users.push(item);\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  signInStatus: false,\r\n  users: users\r\n};\r\n\r\nexport const userInformationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_LOGIN_STATUS:\r\n      return {...state, signInStatus: !state.signInStatus}\r\n    case ADD_NEW_USER:\r\n      return {...state, signInStatus: !state.signInStatus, users: [...state.users, action.payload]}\r\n    case DELETE_USER:\r\n      const index = action.payload.index;\r\n      return {...state, users: [...state.users.slice(0, index), ...state.users.slice(index + 1)]}\r\n    case CHANGE_USER_INFORMATION:\r\n      state.users[action.payload.index]['login'] = action.payload.value; \r\n      return {...state, users: [...state.users]}\r\n    default: return state;\r\n  }\r\n};","import {CHANGE_ERROR_LOGIN_STATUS} from '../types';\r\n\r\nconst initialState = {\r\n  loginErrorStatus: false\r\n}\r\n\r\nexport const errorPopupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_ERROR_LOGIN_STATUS:\r\n      return {...state, loginErrorStatus: !state.loginErrorStatus}\r\n    default: return state;\r\n  }\r\n}","import {CHANGE_NAVIGATION_CATEGORY} from '../types';\r\n\r\nconst initialState = {\r\n  currentCategory: 'users',\r\n  tableColumnHeaders: ['id', 'login']\r\n}\r\n\r\nexport const navigationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_NAVIGATION_CATEGORY:\r\n      return {...state, currentCategory: action.payload.category, tableColumnHeaders: [...action.payload.headers]}\r\n    default: return state;\r\n  }\r\n}","import temperatureData from '../../utils/temperatureData';\r\nimport {DELETE_TEMPERATURE, CHANGE_TEMPERATURE} from '../types';\r\n\r\nconst initialState = {\r\n  temperature: temperatureData\r\n};\r\n\r\nexport const temperatureInformationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DELETE_TEMPERATURE:\r\n      const index = action.payload.index;\r\n      return {...state, temperature: [...state.temperature.slice(0, index), ...state.temperature.slice(index + 1)]}\r\n    case CHANGE_TEMPERATURE:\r\n      state.temperature[action.payload.index]['degree'] = action.payload.value;\r\n      return {...state, temperature: [...state.temperature]}\r\n    default:\r\n      return state;\r\n  }\r\n};","let temperatureData = [\r\n  {\r\n    id: '1',\r\n    degree: '6'\r\n  },\r\n  {\r\n    id: '2',\r\n    degree: '14'\r\n  },\r\n  {\r\n    id: '6',\r\n    degree: '675'\r\n  },\r\n  {\r\n    id: '7',\r\n    degree: '5'\r\n  }\r\n];\r\n\r\nexport default temperatureData;","import {combineReducers} from 'redux';\r\nimport {userInformationReducer} from './userInformationReducer';\r\nimport {errorPopupReducer} from './errorPopupReducer';\r\nimport {navigationReducer} from './navigationReducer';\r\nimport {temperatureInformationReducer} from './temperatureInformationReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  usersInformation: userInformationReducer,\r\n  loginErrorStatus: errorPopupReducer,\r\n  tableCategoryData: navigationReducer,\r\n  temperatureInformation: temperatureInformationReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}